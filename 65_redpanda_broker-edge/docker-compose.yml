services:
  redpanda:
    image: redpandadata/redpanda:latest
    container_name: redpanda-broker
    restart: always
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://192.168.251.21:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=info
    volumes:
      - /srv/unstack-data/redpanda-broker:/var/lib/redpanda/data
    networks:
      - kafka-edge
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  console:
    image: redpandadata/console:latest
    container_name: redpanda-console
    restart: always
    ports:
      - 8080:8080
    depends_on:
      redpanda:
        condition: service_healthy
    entrypoint: /bin/sh
    command: -c '/app/console'
    volumes:
      - ./console-config.yml:/tmp/config.yml
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
    networks:
      - kafka-edge

networks:
  kafka-edge:
    external: true