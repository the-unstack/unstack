services:
  connect:
    image: redpandadata/connect:latest
    container_name: connect-global-to-postgres
    restart: always
    expose:
      - "4195"
    command: -c /config/pipeline.yml
    env_file:
      - .env
    environment:
      DB_HOST: timescaledb
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_DATABASE: ${POSTGRES_DB}
      KAFKA_BROKER: redpanda-global:29092
    volumes:
      - ./pipeline.yml:/config/pipeline.yml
      - ./healthcheck/healthcheck.sh:/healthcheck.sh
    depends_on:
      redis:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 60s
      start_period: 20s
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - postgres
      - kafka-global
      - global-to-postgres

  redis:
    image: redis:latest
    container_name: connect-global-to-postgres-redis
    restart: always
    expose:
      - "6379"
    command: --loglevel warning # debug, verbose, notice, warning, nothing
    environment:
      - REDIS_PORT=6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 60s
      timeout: 5s
      start_period: 20s
    networks:
      - global-to-postgres

networks:
  global-to-postgres:
    driver: bridge
  kafka-global:
    external: true
  postgres:
    external: true
